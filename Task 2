#include<iostream>
#include<fstream>
#include<string>
#include<sstream>

using namespace std;

struct Account{
    string accountNumber;
    string name;
    string password;
    double balance;
    Account*next;
};
class BankManagementSystem{
    private: 
    Account*head;
    string datafile;
    public:
    BankManagementSystem(): head(NULL), datafile("accounts.txt"){}

    void addAccount(){
        Account*newAccount = new Account;
        cout<<"Enter Account Number: ";
        cin>>newAccount->accountNumber;

        if (isAccountNumberUnique(newAccount->accountNumber))
        {
            cout<<"ENTER NAME: ";
            cin.ignore();
            getline(cin,newAccount->name);
            cout<<"Set Password";
            cin>>newAccount->password;
            cout<<"Enter Initial Balance: ";
            cin>>newAccount->balance;

            if(head==NULL){
                head = newAccount;
             }else{
                Account*current=head;
                while(current->next!=NULL){
                    current = current->next;
                }
                current->next = newAccount;
             }
             cout<<"\nAccount Added Successfully!"<< endl;
             //save the account to the file
             saveAccountTofile();
        }else {
            cout<<"\nAccount Number is not unique.Please enter a unique account number."<<endl;
            delete newAccount; //free memory for the invalid account
        }
        
    }
}

bool isAccountNumberUnique(const string& accountNumber){
    Account* current = head;
    while(current!=NULL){
        if(current->accountNumber == accountNumber){
            return false;//Account number already exists
        }
        current=current->next;
    }
    return true;//Account number is unique
}

Account* findAccount(const String& accountNumber, const string& password){
    Account*current!=head;
    while(current!=NULL){
        if(current->accountNumber == accountNumber && current->password==password){
       return current; //Account found with matching account and password
        }
        current = current->next;
    }
    return NULL; //Account not found or password doesn't exists
}

void searchAccount(){
    string accountNumber;
    cout<<"Enter Account Number: ";
    cin>>accountNumber;

    string password;
    cout<<"ENTER PASSWORD: ";
    cin>>password;

    Account* account = findAccount(accountNumber,password);
    if(account!=NULL){
        cout<<"\nAccount Number: "<<accountNumber<<endl;
        cout<<"Name: "<<account->name<<endl;
        cout<<"Balance: "<<account->balance<<endl;
    }
}

void depositFunds(){
    string accountNumber;
    cout<<"Enter Account Number: ";
    cin>>accountNumber;

    string password;
    cout<<"Enter Paassword: ";
    cin>>password;

    Account* account= findAccount(accountNumber,password);
    if(account!=NULL){
        double amount;
        cout<<"Enter Deposit Amount: ";
        cin>>amount;

        Account* account = findAccount(accountNumber,password);
        if(account!=NULL){
            double amount;
            cout<<"Enter Deposit Amount: ";
            cin>>amount;

            account->balance+=amount;
            cout<<"\nDeposit Successsfully!"<<endl;
            //save the updated balance to the file
            saveAccountTofile();
        }
    }else{
        cout<<"\nAccount Not Found or Invalid Password!"<<endl;
    }
}


void withDrawFunds(){
    string accountNumber;
    cout<<"Enter Account Number: ";
    cin>>accountNumber;

    string password;
    cout<<"Enter Password: ";
    cin>>password;

    Account* account = findAcoount(accountNumber, password);
    if(account!=NULL){
        double amount;
        cout<<"Enter Withdrawal Amount: ";
        cin>> amount;

        if(account->balance>= amount){
            account->balance-=amount;
            cout<<"\nWithdrawal Successfull!"<<endl;
            //save the updated balance to the file 
            saveAcoountTofile(); 
        }else{
            cout<<"\nInsufficient Funds!"<<endl;
        }
    }else{
        cout<<"\nAccount Not Found or Invalid Password!"<<endl;
    }
}

void displayAccount(){
    cout<<"\n--------ALL Accounts--------"<<endl;
    Account* current=head;
    while(current!=NULL){
        cout<<"\nAccount Number: "<< current->accountNumber<<endl;
         cout<<"Name: "<<current->name<<endl;
        cout<<"Balance: "<<current->balance<<endl;
        current = current->next;
    }
    cout<<endl;
}
void saveAcoountTofile(){
    ofstream ouptutFile(datafile.c_str()); //convert string to const char
    
    if(outputFile.is_open()){
        Account*current = head;
        while(current !=NULL){
            outputFile<<current->accountNumber<<","<< current->name<<",<<current->password<< current->balance<< endl;"
            current= current->next;
        }
        outputFile.close();

        cout<<"\nAccounts saved to file: "<<dataFile<<endl;
    }else{
        cout<<"\nAccount saved to file: "<<dataFile<< endl;
    }else{
        cout<<"\nErre: Unable to open file for writing."<<endl;
    }
}

void loadaccountFromfile(){
    ifstream InputFile(dataFile.c_str());//convert string to const char

    if (inputFile.is_open())
    { 
    string line;
    while(getline(inputFile,line)){
        stringstream ss(line);
        string accountNumber,name,password;
        double balance;

        getline(ss,accountNumber,',');
        getline(ss, name, ',');
        getline(ss, password,',');
        ss>>balance;

        Account*newAccount = new Account;
        newAccount->accountNumber = accountNumber;
        newAccount->name = name;
        newAccount->balance = balance;
        newAccount->password = password;
        newAccount->next = NULL;
        
        if (head==NULL)
        {
            head=newAccount;
        }else{
            Account*current = head;
            while(current->next == NULL){
                current= current->next;
            }
            current->next = newAccount;
        }
        
    }
    inputFile.close();

    cout<<"\nAccount loaded from file"<<dataFile<<endl;
    }else{
        cout<<"\n Error: Unable to open file for reading."<<endl;
    }
}

void menu(){
    //Load accounts from the file when the program starts
    loadAccountFromfile();

    int choice;
    while(true){
        cout<<"\n---------Bank Management System---------"<<endl;
        cout<<"1. ADD ACCOUNT"<<endl;
        cout<<"2. SEARCH ACCOUNT"<<endl;
        cout<<"3. DEPOSIT FUNDS"<<endl;
        cout<<"4. WITHDRAW FUNDS"<<endl;
        cout<<"5. DISPLAY ALL ACOUNTS" << endl;
        cout<<"6. EXIT"<<endl;
        cout<<"ENTER YOUR CHOICE: ";
        cin>>choice;

        switch (choice)
        {
        case 1:
            addAccount();
            break;
        case 2:
             searchAccount();
             break;
        case 3: 
             depositFunds();
             break;
        case 4:
             withdrawFunds();
             break;
        case 5:
              displayAccounts();
              break;
        case 6:
            return;                    
        default:
            cout<<"Invalid Choice!"<<endl;
        }
    }
}

int main(){
    BankManagementSystem bankManagementSystem;
    bankManagementSystem.menu();
    return 0;

}
